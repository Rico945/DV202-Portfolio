<?php/** * Animated Heading Addon * * @package Radiantthemes */namespace RadiantthemesAddons\Widgets;use Elementor\Controls_Manager;use Elementor\Group_Control_Typography;use Elementor\Repeater;use Elementor\Widget_Base;if ( ! defined( 'ABSPATH' ) ) {	exit; // Exit if accessed directly.}/** * Elementor Tab widget. * * Elementor widget that displays tab content in various styles. * * @since 1.0.0 */class Radiantthemes_Style_Animated_Heading extends Widget_Base {	/**	 * Retrieve the widget name.	 *	 * @since 1.1.0	 *	 * @access public	 *	 * @return string Widget name.	 */	public function get_name() {		return 'radiant-animated-heading';	}	/**	 * Retrieve the widget title.	 *	 * @since 1.1.0	 *	 * @access public	 *	 * @return string Widget title.	 */	public function get_title() {		return esc_html__( 'Animated Heading', 'radiantthemes-addons' );	}	/**	 * Retrieve the widget icon.	 *	 * @since 1.1.0	 *	 * @access public	 *	 * @return string Widget icon.	 */	public function get_icon() {		return 'eicon-heading';	}	/**	 * Requires css files.	 *	 * @return array	 */	public function get_style_depends() {		return array(			'rt-animated-heading',		);	}	/**	 * Requires js files.	 *	 * @return array	 */	public function get_script_depends() {		return [		    'modernizr-custom',			'rt-animated-main',		];	}	/**	 * Retrieve the list of categories the widget belongs to.	 *	 * Used to determine where to display the widget in the editor.	 *	 * Note that currently Elementor supports only one category.	 * When multiple categories passed, Elementor uses the first one.	 *	 * @since 1.1.0	 *	 * @access public	 *	 * @return array Widget categories.	 */	public function get_categories() {		return array( 'radiant-widgets-category' );	}	/**	 * Register the widget controls.	 *	 * Adds different input fields to allow the user to change and customize the widget settings.	 *	 * @since 1.1.0	 *	 * @access protected	 */	protected function register_controls() {		$this->start_controls_section(			'section_tabs_general',			array(				'label' => esc_html__( 'Animated Heading', 'radiantthemes-addons' ),			)		);		$this->add_control(			'rt_animation',			array(				'label'       => esc_html__( 'Animation Type', 'radiantthemes-addons' ),				'label_block' => true,				'type'        => Controls_Manager::SELECT,				'options'     => array(					'rt-rotate-1'    => esc_html__( 'Rotate 1', 'radiantthemes-addons' ),					'letters rt-type'    => esc_html__( 'Type', 'radiantthemes-addons' ),					'letters rt-rotate-2'  => esc_html__( 'Rotate 2', 'radiantthemes-addons' ),					'rt-loading-bar'   => esc_html__( 'Loading Bar', 'radiantthemes-addons' ),					'rt-slide'   => esc_html__( 'Slide', 'radiantthemes-addons' ),					'rt-clip is-full-width'    => esc_html__( 'Clip', 'radiantthemes-addons' ),					'rt-zoom'  => esc_html__( 'Zoom', 'radiantthemes-addons' ),					'letters rt-rotate-3'  => esc_html__( 'Rotate 3', 'radiantthemes-addons' ),					'letters rt-scale'   => esc_html__( 'Scale', 'radiantthemes-addons' ),					'rt-push'    => esc_html__( 'Push', 'radiantthemes-addons' ),									),				'default'     => 'rt-rotate-1',			)		);		$this->add_control(			'header_size',			[				'label' => __( 'HTML Tag', 'radiantthemes-addons' ),				'type' => Controls_Manager::SELECT,				'options' => [					'h1' => 'H1',					'h2' => 'H2',					'h3' => 'H3',					'h4' => 'H4',					'h5' => 'H5',					'h6' => 'H6',					'div' => 'div',					'span' => 'span',					'p' => 'p',				],				'default' => 'h2',			]		);		$this->add_responsive_control(			'align_nav',			array(				'label'     => esc_html__( 'Heading Alignment', 'radiantthemes-addons' ),				'type'      => Controls_Manager::CHOOSE,				'options'   => array(					'left'    => array(						'title' => esc_html__( 'Left', 'radiantthemes-addons' ),						'icon'  => 'eicon-text-align-left',					),					'center'  => array(						'title' => esc_html__( 'Center', 'radiantthemes-addons' ),						'icon'  => 'eicon-text-align-center',					),					'right'   => array(						'title' => esc_html__( 'Right', 'radiantthemes-addons' ),						'icon'  => 'eicon-text-align-right',					),					'justify' => array(						'title' => esc_html__( 'Justified', 'radiantthemes-addons' ),						'icon'  => 'eicon-text-align-justify',					),				),				'selectors' => array(					'{{WRAPPER}} .rt-animated-text' => 'text-align: {{VALUE}};',									),			)		);		$this->add_control(            'before_text',            [                'label'       => esc_html__( 'Before Text', 'radiantthemes-addons' ),                'type'        => Controls_Manager::TEXT,                'default'     => esc_html__( 'Engaging New', 'radiantthemes-addons' ),                'placeholder' => esc_html__( 'Before Text', 'radiantthemes-addons' ),                'dynamic'     => [                    'active' => true,                ],            ]        );        $this->add_control(            'after_text',            [                'label'       => esc_html__( 'After Text', 'radiantthemes-addons' ),                'type'        => Controls_Manager::TEXT,                'default'     => '',                'placeholder' => esc_html__( 'After Text', 'radiantthemes-addons' ),                'dynamic'     => [                    'active' => true,                ],            ]        );		$repeater = new Repeater();		$repeater->add_control(			'tabs_title',			array(				'label'       => esc_html__( 'Enter your title', 'radiantthemes-addons' ),				'type'        => Controls_Manager::TEXT,				'default'     => esc_html__( 'Technology', 'radiantthemes-addons' ),				'dynamic'     => array(					'active' => true,				),				'label_block' => true,			)		);        		$repeater->add_control(			'title_color',			[				'label' => __( 'Text Color', 'radiantthemes-addons' ),				'type' => Controls_Manager::COLOR,								'selectors' => [					'{{WRAPPER}} {{CURRENT_ITEM}}' => 'color: {{VALUE}} !important'				],			]		);        $repeater->add_group_control(			Group_Control_Typography::get_type(),			array(				'name'     => 'title_typography',				'label'    => esc_html__( 'Title Typography ', 'radiantthemes-addons' ),				'selector' => '{{WRAPPER}} {{CURRENT_ITEM}}',			)		);				$this->add_control(			'rt-tabs',			array(				'label'       => esc_html__( 'Animation Items', 'radiantthemes-addons' ),				'type'        => Controls_Manager::REPEATER,				'fields'      => $repeater->get_controls(),				'default'     => array(					array(						'tabs_title'   => esc_html__( 'Technology', 'radiantthemes-addons' ),											),					array(						'tabs_title'   => esc_html__( 'Software', 'radiantthemes-addons' ),											),				),				'title_field' => '{{{ tabs_title }}}',			)		);          $this->add_control(            'rtdelay',            [                'label'              => esc_html__( 'Animation Delay', 'radiantthemes-addons' ),                'type'               => Controls_Manager::NUMBER,                'min'                => 1000,                'step'               => 100,                'max'                => 30000,                'default'            => 2500,                'description'        => esc_html__( 'Animation Delay in milliseconds. Min 1000 and Max 30000.', 'radiantthemes-addons' ),                'frontend_available' => true,            ]        );        $this->add_control(            'clip_duration',            [                'label'              => esc_html__( 'Reveal Duration', 'radiantthemes-addons' ),                'type'               => Controls_Manager::NUMBER,                'min'                => 100,                'step'               => 100,                'max'                => 10000,                'default'            => 600,                'description'        => esc_html__( 'Reveal Duration in milliseconds. Min 100 and Max 10000.', 'radiantthemes-addons' ),                'frontend_available' => true,                'condition'    => [                   'rt_animation'    => 'rt-clip is-full-width',                ],            ]        );        $this->add_control(            'clip_delay',            [                'label'              => esc_html__( 'Reveal Animation Delay', 'radiantthemes-addons' ),                'type'               => Controls_Manager::NUMBER,                'min'                => 100,                'step'               => 100,                'max'                => 10000,                'default'            => 1500,                'description'        => esc_html__( 'Reveal Animation Delay in milliseconds. Min 100 and Max 10000.', 'radiantthemes-addons' ),                'frontend_available' => true,                'condition'    => [                   'rt_animation'    => 'rt-clip is-full-width',                ],            ]        );        $this->add_control(            'type_letter_delay',            [                'label'              => esc_html__( 'Type Letter Delay', 'radiantthemes-addons' ),                'type'               => Controls_Manager::NUMBER,                'min'                => 100,                'step'               => 100,                'max'                => 5000,                'default'            => 150,                'description'        => esc_html__( 'Type Letter Delay in milliseconds. Min 100 and Max 10000.', 'radiantthemes-addons' ),                'frontend_available' => true,                'condition'    => [                    'rt_animation'    => 'letters rt-type',                ],            ]        );        $this->add_control(            'letters_selection_duration',            [                'label'              => esc_html__( 'Selection Duration', 'radiantthemes-addons' ),                'type'               => Controls_Manager::NUMBER,                'min'                => 100,                'step'               => 100,                'max'                => 5000,                'default'            => 500,                'description'        => esc_html__( 'Selection Duration in milliseconds. Min 100 and Max 10000.', 'radiantthemes-addons' ),                'frontend_available' => true,                'condition'    => [                    'rt_animation'    => 'letters rt-type',                ],            ]        );        $this->add_control(            'letters_type_anim_delay',            [                'label'              => esc_html__( 'Type Animation Delay', 'radiantthemes-addons' ),                'type'               => Controls_Manager::NUMBER,                'min'                => 100,                'step'               => 100,                'max'                => 5000,                'default'            => 1300,                'description'        => esc_html__( 'Type Animation Delay in milliseconds. Min 100 and Max 10000.', 'radiantthemes-addons' ),                'frontend_available' => true,                'condition'    => [                    'rt_animation'    => 'letters rt-type',                ],            ]        );        $this->add_control(            'loading_delay',            [                'label'              => esc_html__( 'Loading Bar Animation Delay', 'radiantthemes-addons' ),                'type'               => Controls_Manager::NUMBER,                'min'                => 100,                'step'               => 100,                'max'                => 10000,                'default'            => 3800,                'description'        => esc_html__( 'Bar Animation Delay in milliseconds. Min 100 and Max 10000.', 'radiantthemes-addons' ),                'frontend_available' => true,                'condition'    => [                    'rt_animation'    => 'rt-loading-bar',                ],            ]        );        $this->add_control(            'bar_waiting',            [                'label'              => esc_html__( 'Loading Bar Waiting Time', 'radiantthemes-addons' ),                'type'               => Controls_Manager::NUMBER,                'min'                => 100,                'step'               => 100,                'max'                => 10000,                'default'            => 300,                'description'        => esc_html__( 'Bar Waiting Time in milliseconds. Min 100 and Max 10000.', 'radiantthemes-addons' ),                'frontend_available' => true,                'condition'    => [                    'rt_animation'    => 'rt-loading-bar',                ],            ]        );        		$this->end_controls_section();		$this->start_controls_section(			'section_tabs_style',			array(				'label' => esc_html__( 'Style', 'radiantthemes-addons' ),				'tab'   => Controls_Manager::TAB_STYLE,			)		);        $this->add_group_control(			Group_Control_Typography::get_type(),			array(				'name'     => 'be_title_typography',				'label'    => esc_html__( 'Before Text Typography ', 'radiantthemes-addons' ),				'selector' => '{{WRAPPER}} .before-text',			)		);		$this->add_control(			'be_color',			array(				'label'     => esc_html__( 'Before Text Color ', 'radiantthemes-addons' ),				'type'      => Controls_Manager::COLOR,				'selectors' => array(										'{{WRAPPER}} .before-text' => 'color: {{VALUE}}',								),			)		);		$this->add_group_control(			Group_Control_Typography::get_type(),			array(				'name'     => 'af_content_typography',				'label'    => esc_html__( 'After Text Typography ', 'radiantthemes-addons' ),				'selector' => '{{WRAPPER}} .after-text',			)		);		$this->add_control(			'af_color',			array(				'label'     => esc_html__( 'After Text Color ', 'radiantthemes-addons' ),				'type'      => Controls_Manager::COLOR,				'selectors' => array(					'{{WRAPPER}} .after-text' => 'color: {{VALUE}}',				),			)		);		$this->add_control(			'loading_color',			array(				'label'     => esc_html__( 'Loading Bar Color ', 'radiantthemes-addons' ),				'type'      => Controls_Manager::COLOR,				'selectors' => array(					'{{WRAPPER}} .rt-headline.rt-loading-bar .rt-words-wrapper::after' => 'background: {{VALUE}}',				),				'condition' => array(					'rt_animation' => 'rt-loading-bar',				),			)		);		$this->add_control(			'typebar_color',			array(				'label'     => esc_html__( 'Type Bar Color ', 'radiantthemes-addons' ),				'type'      => Controls_Manager::COLOR,				'selectors' => array(					'{{WRAPPER}} .rt-headline.rt-clip .rt-words-wrapper::after' => 'background-color: {{VALUE}}',				),				'condition' => array(					'rt_animation' => 'rt-clip is-full-width',				),			)		);								$this->end_controls_section();	}	/**	 * Render the widget output on the frontend.	 *	 * Written in PHP and used to generate the final HTML.	 *	 * @since 1.1.0	 *	 * @access protected	 */	protected function render() {		$settings = $this->get_settings_for_display();		$tag = $settings['header_size'];		$output  = '';		$i=0; 				$delay =( $settings['rtdelay'] ) ? $settings['rtdelay'] : 2500;		$ldelay =( $settings['loading_delay'] ) ? $settings['loading_delay'] : 3800;		$bwaiting =( $settings['bar_waiting'] ) ? $settings['bar_waiting'] : 3000;		$letterdelay =( $settings['type_letter_delay'] ) ? $settings['type_letter_delay'] : 150;		$lduration =( $settings['letters_selection_duration'] ) ? $settings['letters_selection_duration'] : 500;		$lanimdelay =( $settings['letters_type_anim_delay'] ) ? $settings['letters_type_anim_delay'] : 1300;		$cduration =( $settings['clip_duration'] ) ? $settings['clip_duration'] : 600;		$cdelay =( $settings['clip_delay'] ) ? $settings['clip_delay'] : 1500;           $output .='<section class="rt-animated-text"  data-timeout="'.$delay.'"            data-ldelay="'.$ldelay.'"           data-lwaiting="'.$bwaiting.'"                      data-letterdelay="'.$letterdelay.'"           data-lduration="'.$lduration.'"           data-lanimdelay="'.$lanimdelay.'"           data-cduration="'.$cduration.'"           data-cdelay="'.$cdelay.'"           >                    <'.$tag.' class="rt-headline '.$settings["rt_animation"].'">                        <span class="before-text">'.$settings["before_text"].'</span>                        <span class="rt-words-wrapper">';                        	foreach ( $settings['rt-tabs'] as $index => $item ) :                        		$t='class="elementor-repeater-item-'. $item['_id'] . '"';                        		if(!$i){ $t='class="rt-is-visible elementor-repeater-item-' . $item['_id'] . '"';}			$tab_title = preg_replace( '/\s*/', '', $item['tabs_title'] );			$tab_title = preg_replace( '/[^A-Za-z0-9\-]/', '', $item['tabs_title'] );			$tab_title = strtolower( $tab_title );						$output .= '<b '.$t.'>';						$output .= esc_attr( $item['tabs_title'] );						$output .= '</b>';			$i=1;	        					endforeach;                                             $output .='</span> <span class="after-text">'.$settings["after_text"].'</span>                    </'.$tag.'>                </section>';						echo $output;	}}