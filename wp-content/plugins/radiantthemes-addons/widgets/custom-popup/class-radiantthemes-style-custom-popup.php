<?php/** * Custom Popup  Addon * * @package Radiantthemes */namespace RadiantthemesAddons\Widgets;use Elementor\Controls_Manager;use Elementor\Group_Control_Typography;use Elementor\Group_Control_Border;use Elementor\Core\Schemes\Typography;use Elementor\Core\Schemes\Color;use Elementor\Widget_Base;if ( ! defined( 'ABSPATH' ) ) {	exit; // Exit if accessed directly.}/** * Elementor Popup Video widget. * * Elementor widget that displays a video in a popup window. * * @since 1.0.0 */class Radiantthemes_Style_Custom_Popup extends Widget_Base {	/**	 * Retrieve the widget name.	 *	 * @since 1.1.0	 *	 * @access public	 *	 * @return string Widget name.	 */	public function get_name() {		return 'radiant-custom-popup';	}	/**	 * Retrieve the widget title.	 *	 * @since 1.1.0	 *	 * @access public	 *	 * @return string Widget title.	 */	public function get_title() {		return esc_html__( 'Custom Popup', 'radiantthemes-addons' );	}	/**	 * Retrieve the widget icon.	 *	 * @since 1.1.0	 *	 * @access public	 *	 * @return string Widget icon.	 */	public function get_icon() {		return 'eicon-image-rollover';	}	/**	 * Requires css files.	 *	 * @return array	 */	public function get_style_depends() {		return [			'rt-custom-popup',		];	}	/**	 * Requires js files.	 *	 * @return array	 */	public function get_script_depends() {		return [			'radiantthemes-addons-custom',		];	}	/**	 * Retrieve the list of categories the widget belongs to.	 *	 * Used to determine where to display the widget in the editor.	 *	 * Note that currently Elementor supports only one category.	 * When multiple categories passed, Elementor uses the first one.	 *	 * @since 1.1.0	 *	 * @access public	 *	 * @return array Widget categories.	 */	public function get_categories() {		return [ 'radiant-widgets-category' ];	}	/**	 * Register the widget controls.	 *	 * Adds different input fields to allow the user to change and customize the widget settings.	 *	 * @since 1.1.0	 *	 * @access protected	 */	protected function register_controls() {		$this->start_controls_section(			'section_general',			[				'label' => esc_html__( 'General', 'radiantthemes-addons' ),			]		);		$this->add_control(			'radiant_custom_popup_style',			[				'label'       => esc_html__( 'Custom Popup Style', 'radiantthemes-addons' ),				'label_block' => true,				'type'        => Controls_Manager::SELECT2,				'options'     => [					'one' => esc_html__( 'Style One', 'radiantthemes-addons' ),					'two' => esc_html__( 'Style Two', 'radiantthemes-addons' ),					'three' => esc_html__( 'Style Three', 'radiantthemes-addons' ),					'four' => esc_html__( 'Style Four', 'radiantthemes-addons' ),					'five' => esc_html__( 'Style Five', 'radiantthemes-addons' ),				],				'default'     => 'one',			]		);		$this->add_control(			'radiant_custom_popup_btn_text',			array(				'label'       => esc_html__( 'Button Text', 'radiantthemes-addons' ),				'label_block' => true,				'type'        => Controls_Manager::TEXT,				'default'     => esc_html__( 'Open Modal Box', 'radiantthemes-addons' ),			)		);		$this->add_control(			'add-svgicon',			[				'label' => __( 'Add SVG Icon', 'radiantthemes-addons' ),				'type' => Controls_Manager::SWITCHER,				'label_on' => __( 'Yes', 'radiantthemes-addons' ),				'label_off' => __( 'No', 'radiantthemes-addons' ),				'return_value' => 'yes',				'default' => 'yes',				'condition'   => array(					'radiant_custom_popup_style' => 'one',				),			]		);		$this->add_control(			'svgicon',			[				'label'     => __( 'Arrow Icon', 'radiantthemes-addons' ),				'description'=> __( 'Put svg image code', 'radiantthemes-addons' ),				'type'      => Controls_Manager::TEXTAREA,								'condition' => [					'add-svgicon' => 'yes',				],				            ]						);		$this->add_control(			'add-svgimage',			[				'label' => __( 'Add SVG Image', 'radiantthemes-addons' ),				'type' => Controls_Manager::SWITCHER,				'label_on' => __( 'Yes', 'radiantthemes-addons' ),				'label_off' => __( 'No', 'radiantthemes-addons' ),				'return_value' => 'yes',				'default' => 'yes',				'condition'   => array(					'radiant_custom_popup_style' => 'one',				),			]		);		$this->add_control(			'arrow_img',			[				'label'     => __( 'Arrow Image', 'radiantthemes-addons' ),				'type'      => Controls_Manager::MEDIA,					'condition' => [					'add-svgimage' => 'yes',				],				            ]						);		$this->add_control(			'add-svgicon_hover',			[				'label' => __( 'Add SVG Icon for Hover', 'radiantthemes-addons' ),				'type' => Controls_Manager::SWITCHER,				'label_on' => __( 'Yes', 'radiantthemes-addons' ),				'label_off' => __( 'No', 'radiantthemes-addons' ),				'return_value' => 'yes',				'default' => 'yes',				'condition'   => array(					'radiant_custom_popup_style' => 'one',				),			]		);		$this->add_control(			'svgicon_hover',			[				'label'     => __( 'Arrow Icon for Hover', 'radiantthemes-addons' ),				'description'=> __( 'Put svg image code', 'radiantthemes-addons' ),				'type'      => Controls_Manager::TEXTAREA,								'condition' => [					'add-svgicon_hover' => 'yes',				],				            ]						);		$this->add_control(			'add-svgimage_hover',			[				'label' => __( 'Add SVG Image Hover', 'radiantthemes-addons' ),				'type' => Controls_Manager::SWITCHER,				'label_on' => __( 'Yes', 'radiantthemes-addons' ),				'label_off' => __( 'No', 'radiantthemes-addons' ),				'return_value' => 'yes',				'default' => 'yes',				'condition'   => array(					'radiant_custom_popup_style' => 'one',				),			]		);		$this->add_control(			'arrow_img_hover',			[				'label'     => __( 'Arrow Image for Hover', 'radiantthemes-addons' ),				'type'      => Controls_Manager::MEDIA,					'condition' => [					'add-svgimage_hover' => 'yes',				],				            ]						);		$this->add_control(			'radiant_custom_popup_alignment',			[				'label'       => esc_html__( 'Custom Popup Alignment', 'radiantthemes-addons' ),				'label_block' => true,				'type'        => Controls_Manager::CHOOSE,				'options'     => [					'left'   => [						'title' => esc_html__( 'Left', 'radiantthemes-addons' ),						'icon'  => 'fa fa-align-left',					],					'center' => [						'title' => esc_html__( 'Center', 'radiantthemes-addons' ),						'icon'  => 'fa fa-align-center',					],					'right'  => [						'title' => esc_html__( 'Right', 'radiantthemes-addons' ),						'icon'  => 'fa fa-align-right',					],				],				'default'     => 'center',				'toggle'      => true,				'selectors' => array(			'{{WRAPPER}} .modal-element-one .radiantthemes-custom-button' => 'text-align: {{VALUE}};',			'{{WRAPPER}} .rt-modal-style-btn .modal-element-two' => 'text-align: {{VALUE}};',			'{{WRAPPER}} .rt-modal-style-btn .modal-element-three' => 'text-align: {{VALUE}};',			'{{WRAPPER}} .rt-modal-style-btn .modal-element-four' => 'text-align: {{VALUE}};',			'{{WRAPPER}} .rt-modal-element-five ' => 'text-align: {{VALUE}};',				),			]		);				$this->end_controls_section();		$this->start_controls_section(			'modal_content',			array(				'label' => __( 'Modal Content', 'radiantthemes-addons' ),				'tab'   => Controls_Manager::TAB_CONTENT,			)		);		$this->add_control(			'custom_modal_content',			array(				'label'       => esc_html__( 'Custom Modal Content', 'radiantthemes-addons' ),				'label_block' => true,				'type'        => Controls_Manager::WYSIWYG,											)		);				$this->end_controls_section();		$this->start_controls_section(			'style_section',			array(				'label'     => __( 'Style', 'radiantthemes-addons' ),				'tab'       => Controls_Manager::TAB_STYLE,							)		);		$this->add_control(			'popup_btn_color',			array(				'label'       => esc_html__( 'Button Title Color', 'radiantthemes-addons' ),				'type'        => Controls_Manager::COLOR,				'selectors'   => array(					'{{WRAPPER}} .modal-element-one .rt-case-btn-swipe-hov .rt-text-btn' => 'color: {{VALUE}}',					'{{WRAPPER}} .rt-modal-style-btn .rtbtn-content-item .rtbtn-content-button-hyperion' => 'color: {{VALUE}}',					'{{WRAPPER}} .rt-modal-style-btn .rtbtn-content-item .rtbtn-content-button-modal' => 'color: {{VALUE}}',					'{{WRAPPER}} .rt-modal-style-btn .rtbtn-content-item .rtbtn-modal-hyperion' => 'color: {{VALUE}}',					'{{WRAPPER}} .rt-modal-element-five > label.rt-gradient-btn' => 'color: {{VALUE}}',									),				'description' => esc_html__( 'Select Button Text color.', 'radiantthemes-addons' ),			)		);				$this->add_control(			'custom_popup_btn_gradient_bg_add',			array(				'label'        => esc_html__( 'Add Gradient Background?', 'radiantthemes-addons' ),				'type'         => Controls_Manager::SWITCHER,				'label_on'     => esc_html__( 'Yes', 'radiantthemes-addons' ),				'label_off'    => esc_html__( 'No', 'radiantthemes-addons' ),				'return_value' => 'yes',				'default'      => 'yes',				'description'  => esc_html__( 'Please Note: If selected, please do not use any background image or direct backgrund color.', 'radiantthemes-addons' ),				'condition' => array(					'radiant_custom_popup_style!' => 'five',				),			)		);		$this->add_control(			'custom_popup_btn_gradient_bg_type',			array(				'label'       => esc_html__( 'Gradient Background Type', 'radiantthemes-addons' ),				'label_block' => true,				'type'        => Controls_Manager::SELECT2,				'options'     => array(					'to bottom'       => esc_html__( 'To Bottom', 'radiantthemes-addons' ),					'to top'          => esc_html__( 'To Top', 'radiantthemes-addons' ),					'to right'        => esc_html__( 'To Right', 'radiantthemes-addons' ),					'to left'         => esc_html__( 'To Left', 'radiantthemes-addons' ),					'to top left'     => esc_html__( 'To Top Left', 'radiantthemes-addons' ),					'to bottom left'  => esc_html__( 'To Bottom Left', 'radiantthemes-addons' ),					'to top right'    => esc_html__( 'To Top Right', 'radiantthemes-addons' ),					'to bottom right' => esc_html__( 'To Bottom Right', 'radiantthemes-addons' ),				),				'condition'   => array(					'custom_popup_btn_gradient_bg_add' => 'yes',				),				'description' => esc_html__( 'Select backgroud type.', 'radiantthemes-addons' ),			)		);		$this->add_control(			'custom_popup_btn_gradient_bg_color_one',			array(				'label'     => esc_html__( 'Background Color (One)', 'radiantthemes-addons' ),				'type'      => Controls_Manager::COLOR,				'condition' => array(					'custom_popup_btn_gradient_bg_add' => 'yes',				),			)		);		$this->add_control(			'custom_popup_btn_gradient_bg_color_two',			array(				'label'     => esc_html__( 'Background Color (Two)', 'radiantthemes-addons' ),				'type'      => Controls_Manager::COLOR,				'selectors' => array(					'{{WRAPPER}} .modal-element-one .rt-case-btn > span' => 'background: linear-gradient({{custom_popup_btn_gradient_bg_type.VALUE}}, {{custom_popup_btn_gradient_bg_color_one.VALUE}} 0%, {{VALUE}} 100%)',					'{{WRAPPER}} .rt-modal-style-btn .rtbtn-content-item .rtbtn-content-button-hyperion' => 'background: linear-gradient({{custom_popup_btn_gradient_bg_type.VALUE}}, {{custom_popup_btn_gradient_bg_color_one.VALUE}} 0%, {{VALUE}} 100%)',				    '{{WRAPPER}} .rt-modal-style-btn .rtbtn-content-item .rtbtn-content-button-hyperion::before' => 'background: {{VALUE}}',					'{{WRAPPER}} .rt-modal-style-btn .rtbtn-content-item .rtbtn-content-button-modal.gradient-color' => 'background: linear-gradient({{custom_popup_btn_gradient_bg_type.VALUE}}, {{custom_popup_btn_gradient_bg_color_one.VALUE}} 0%, {{VALUE}} 100%)',					'{{WRAPPER}} .rt-modal-style-btn .rtbtn-content-item .rtbtn-modal-hyperion' => 'background: linear-gradient({{custom_popup_btn_gradient_bg_type.VALUE}}, {{custom_popup_btn_gradient_bg_color_one.VALUE}} 0%, {{VALUE}} 100%)',					),				'condition' => array(					'custom_popup_btn_gradient_bg_add' => 'yes',				),			)		);		$this->add_control(			'custom_popup_btn__bg_color_background',			array(				'label'     => esc_html__( 'Background Color ', 'radiantthemes-addons' ),				'type'      => Controls_Manager::COLOR,				'condition' => array(					'radiant_custom_popup_style' => 'five',				),			)		);		$this->add_control(			'custom_popup_btn__bg_color_border1',			array(				'label'     => esc_html__( 'Border Color One', 'radiantthemes-addons' ),				'type'      => Controls_Manager::COLOR,				'condition' => array(					'radiant_custom_popup_style' => 'five',				),			)		);		$this->add_control(			'custom_popup_btn__bg_color_border2',			array(				'label'     => esc_html__( 'Border Color Two', 'radiantthemes-addons' ),				'type'      => Controls_Manager::COLOR,				'condition' => array(					'radiant_custom_popup_style' => 'five',				),			)		);		$this->add_control(			'custom_popup_btn__bg_color_border3',			array(				'label'     => esc_html__( 'Border Color Three', 'radiantthemes-addons' ),				'type'      => Controls_Manager::COLOR,				'selectors' => array(					'{{WRAPPER}} .rt-modal-element-five > label.demo' => 'background-image: linear-gradient({{custom_popup_btn__bg_color_background.value}},{{custom_popup_btn__bg_color_background.value}}), linear-gradient(270deg, {{custom_popup_btn__bg_color_border1.value}}, {{custom_popup_btn__bg_color_border2.value}} 50%, {{VALUE}} 100%)',															),				'condition' => array(					'radiant_custom_popup_style' => 'five',				),			)		);																						$this->add_control(			'custom_popup_btn__bg_color_background_hover',			array(				'label'     => esc_html__( 'Hover Background Color ', 'radiantthemes-addons' ),				'type'      => Controls_Manager::COLOR,				'condition' => array(					'radiant_custom_popup_style' => 'five',				),			)		);		$this->add_control(			'custom_popup_btn__bg_color_border1_hover',			array(				'label'     => esc_html__( 'Border Color One(Hover)', 'radiantthemes-addons' ),				'type'      => Controls_Manager::COLOR,				'condition' => array(					'radiant_custom_popup_style' => 'five',				),			)		);		$this->add_control(			'custom_popup_btn__bg_color_border2_hover',			array(				'label'     => esc_html__( 'Border Color Two(Hover)', 'radiantthemes-addons' ),				'type'      => Controls_Manager::COLOR,				'condition' => array(					'radiant_custom_popup_style' => 'five',				),			)		);		$this->add_control(			'custom_popup_btn__bg_color_border3_hover',			array(				'label'     => esc_html__( 'Border Color Three(Hover)', 'radiantthemes-addons' ),				'type'      => Controls_Manager::COLOR,				'selectors' => array(					'{{WRAPPER}} .rt-modal-element-five > label.demo:hover' => 'background-image: linear-gradient({{custom_popup_btn__bg_color_background_hover.value}},{{custom_popup_btn__bg_color_background_hover.value}}), linear-gradient(270deg, {{custom_popup_btn__bg_color_border1_hover.value}}, {{custom_popup_btn__bg_color_border2_hover.value}} 50%, {{VALUE}} 100%)',															),				'condition' => array(					'radiant_custom_popup_style' => 'five',				),			)		);																				$this->add_group_control(			Group_Control_Border::get_type(),			array(				'name'     => 'custom_popup_btn_border',				'label'    => esc_html__( 'Border', 'radiantthemes-addons' ),				'selector' => 				'{{WRAPPER}} .modal-element-one .rt-case-btn > span , .rt-modal-style-btn .rtbtn-content-item .rtbtn-content-button-hyperion , .rt-modal-style-btn .rtbtn-content-item .rtbtn-content-button-modal.gradient-color , .rt-modal-style-btn .rtbtn-content-item .rtbtn-modal-hyperion , .rt-modal-element-five > label.rt-gradient-btn',			)		);		$this->add_control(			'custom_popup_btn_border_radius',			array(				'label'      => esc_html__( 'Border Radius', 'radiantthemes-addons' ),				'type'       => Controls_Manager::SLIDER,				'size_units' => array( 'px' ),				'range'      => array(					'px' => array(						'min' => 0,						'max' => 35,					),				),				'selectors'  => array(					'{{WRAPPER}} .modal-element-one .rt-case-btn > span' => 'border-radius: {{SIZE}}{{UNIT}};',					'{{WRAPPER}} .rt-modal-style-btn .rtbtn-content-item .rtbtn-content-button-hyperion' => 'border-radius: {{SIZE}}{{UNIT}};',					'{{WRAPPER}} .rt-modal-style-btn .rtbtn-content-item .rtbtn-content-button-modal.gradient-color' => 'border-radius: {{SIZE}}{{UNIT}};',					'{{WRAPPER}} .rt-modal-style-btn .rtbtn-content-item .rtbtn-modal-hyperion' => 'border-radius: {{SIZE}}{{UNIT}};',					'{{WRAPPER}} .rt-modal-element-five > label.rt-gradient-btn' => 'border-radius: {{SIZE}}{{UNIT}};',														),			)		);		$this->add_control(			'custom_popup_btn_bg_color',			array(				'label'     => esc_html__( 'Background Color', 'radiantthemes-addons' ),				'type'      => Controls_Manager::COLOR,				'selectors' => array(					'{{WRAPPER}} .modal-element-one .rt-case-btn > span' => 'background: {{VALUE}}',					'{{WRAPPER}} .rt-modal-style-btn .rtbtn-content-item .rtbtn-content-button-hyperion' => 'background: {{VALUE}}',					'{{WRAPPER}} .rt-modal-style-btn .rtbtn-content-item .rtbtn-content-button-modal.gradient-color' => 'background: {{VALUE}}',					'{{WRAPPER}} .rt-modal-style-btn .rtbtn-content-item .rtbtn-modal-hyperion' => 'background: {{VALUE}}',				),				'condition' => array(					'custom_popup_btn_gradient_bg_add!' => 'yes',					'radiant_custom_popup_style!' => 'five',				),			)		);				$this->add_control(			'custom_popup_btn_margin',			array(				'label'      => esc_html__( 'Margin', 'radiantthemes-addons' ),				'type'       => Controls_Manager::DIMENSIONS,				'size_units' => array( 'px', '%', 'em' ),				'selectors'  => array(					'{{WRAPPER}} .modal-element-one .rt-case-btn > span' => 'margin: {{TOP}}{{UNIT}} {{RIGHT}}{{UNIT}} {{BOTTOM}}{{UNIT}} {{LEFT}}{{UNIT}};',					'{{WRAPPER}} .rt-modal-style-btn .rtbtn-content-item .rtbtn-content-button-hyperion' => 'margin: {{TOP}}{{UNIT}} {{RIGHT}}{{UNIT}} {{BOTTOM}}{{UNIT}} {{LEFT}}{{UNIT}};',					'{{WRAPPER}} .rt-modal-style-btn .rtbtn-content-item .rtbtn-content-button-modal' => 'margin: {{TOP}}{{UNIT}} {{RIGHT}}{{UNIT}} {{BOTTOM}}{{UNIT}} {{LEFT}}{{UNIT}};',					'{{WRAPPER}} .rt-modal-style-btn .rtbtn-content-item .rtbtn-modal-hyperion' => 'margin: {{TOP}}{{UNIT}} {{RIGHT}}{{UNIT}} {{BOTTOM}}{{UNIT}} {{LEFT}}{{UNIT}};',					'{{WRAPPER}} .rt-modal-element-five > label.rt-gradient-btn' => 'margin: {{TOP}}{{UNIT}} {{RIGHT}}{{UNIT}} {{BOTTOM}}{{UNIT}} {{LEFT}}{{UNIT}};',				),			)		);		$this->add_control(			'custom_popup_btn_padding',			array(				'label'      => esc_html__( 'Padding', 'radiantthemes-addons' ),				'type'       => Controls_Manager::DIMENSIONS,				'size_units' => array( 'px', '%', 'em' ),				'selectors'  => array(					'{{WRAPPER}} .modal-element-one .rt-case-btn > span' => 'padding: {{TOP}}{{UNIT}} {{RIGHT}}{{UNIT}} {{BOTTOM}}{{UNIT}} {{LEFT}}{{UNIT}};',					'{{WRAPPER}} .rt-modal-style-btn .rtbtn-content-item .rtbtn-content-button-hyperion' => 'padding: {{TOP}}{{UNIT}} {{RIGHT}}{{UNIT}} {{BOTTOM}}{{UNIT}} {{LEFT}}{{UNIT}};',					'{{WRAPPER}} .rt-modal-style-btn .rtbtn-content-item .rtbtn-content-button-modal' => 'padding: {{TOP}}{{UNIT}} {{RIGHT}}{{UNIT}} {{BOTTOM}}{{UNIT}} {{LEFT}}{{UNIT}};',					'{{WRAPPER}} .rt-modal-style-btn .rtbtn-content-item .rtbtn-modal-hyperion' => 'padding: {{TOP}}{{UNIT}} {{RIGHT}}{{UNIT}} {{BOTTOM}}{{UNIT}} {{LEFT}}{{UNIT}};',					'{{WRAPPER}} .rt-modal-element-five > label.rt-gradient-btn' => 'padding: {{TOP}}{{UNIT}} {{RIGHT}}{{UNIT}} {{BOTTOM}}{{UNIT}} {{LEFT}}{{UNIT}};',									),			)		);		$this->add_group_control(			\Elementor\Group_Control_Box_Shadow::get_type(),			[				'name' => 'box_shadow',				'label' => __( 'Box Shadow', 'radiantthemes-addons' ),				'selector' => '{{WRAPPER}} .rt-modal-style-btn .rtbtn-content-item .rtbtn-content-button-modal',				'condition' => array(					'radiant_custom_popup_style' => 'three',				),			]		);		$this->add_group_control(			Group_Control_Typography::get_type(),			array(				'label'    => esc_html__( 'Modal Content Typography', 'radiantthemes-addons' ),				'name'     => 'modal_content_typography',				'selector' => '{{WRAPPER}} .modal-element-one .popup-inner, {{WRAPPER}} #rt-modal-container .modal-background .modal,{{WRAPPER}} .rt-modal-element-five .rt-modal-pop-wrap',			)		);		$this->add_control(			'modal_content_color',			array(				'label'     => esc_html__( 'Modal Content Color', 'radiantthemes-addons' ),				'type'      => Controls_Manager::COLOR,				'selectors' => array(					'{{WRAPPER}} .modal-element-one .popup-inner' => 'color: {{VALUE}};',					'{{WRAPPER}} #rt-modal-container .modal-background .modal' => 'color: {{VALUE}};',					'{{WRAPPER}} .rt-modal-element-five .rt-modal-pop-wrap' => 'color: {{VALUE}};',					'{{WRAPPER}} .rt-pricing-table.element-ten .rt-table-buy .rt-pricing-action:hover' => 'background: {{VALUE}}; color:#fff;',					'{{WRAPPER}} .rt-pricing-table.element-five > .holder > .select-btn .btn' => 'color: {{VALUE}};border: 1px solid {{VALUE}};',				),			)		);		$this->add_control(			'modal_content_background',			array(				'label'     => esc_html__( 'Modal Content Background Color', 'radiantthemes-addons' ),				'type'      => Controls_Manager::COLOR,				'selectors' => array(					'{{WRAPPER}} .modal-element-one .popup-inner' => 'background-color: {{VALUE}};',					'{{WRAPPER}} #rt-modal-container .modal-background .modal' => 'background-color: {{VALUE}};',					'{{WRAPPER}} .rt-modal-element-five .rt-modal-pop-wrap' => 'background-color: {{VALUE}};',					'{{WRAPPER}} .rt-pricing-table.element-ten .rt-table-buy .rt-pricing-action:hover' => 'background: {{VALUE}}; color:#fff;',					'{{WRAPPER}} .rt-pricing-table.element-five > .holder > .select-btn .btn' => 'color: {{VALUE}};border: 1px solid {{VALUE}};',				),			)		);		     $this->end_controls_section();	}	/**	 * Render the widget output on the frontend.	 *	 * Written in PHP and used to generate the final HTML.	 *	 * @since 1.1.0	 *	 * @access protected	 */	protected function render() {		$settings = $this->get_settings_for_display();		//$target   = $settings['radiant_custom_popup_link']['is_external'] ? 'target = "_blank"' : '';		//$nofollow = $settings['radiant_custom_popup_link']['nofollow'] ? 'rel = "nofollow"' : '';								$output = '';		require 'template/template-custom-popup-style-' . $settings['radiant_custom_popup_style'] . '.php';		echo $output;	}}